//https://leetcode.com/problems/rotting-oranges/
class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        
        // 0 = пустота
        // 1 = свежесть
        // 2 = тухлятина
        // 3 = делаем тухлятинку
        
        
        int rows = grid.size();
        int cols = grid[0].size();
        
        int count = 0;
        
        bool isFresh = false;
        bool isConverting = false;
        
        while(1)
        {
            isFresh = false;
            isConverting = false;
            
            for(int i = 0; i < rows; i++)
            {
                for(int j = 0; j < cols; j++)
                {
                    if(grid[i][j] == 1) // свежий апельсинчик
                    {
                        isFresh = true;
                        if(isRottenNearBy(grid, rows, cols, i, j))
                        {
                            grid[i][j] = 3; // делаем тухлым
                            isConverting = true;
                        }
                    }
                }
            }
            
            if(isFresh == false)
            {
                // свежих больше нет
                break;
            }
            
            if(isFresh == true && isConverting == false)
            {
                // есть свежие, но нечему гнить 
                return -1;
            }
            
            ConvertToRotten(grid, rows, cols);
            count++;        
        }
        
        return count;
    }
    
    bool isRottenNearBy(vector<vector<int>>& grid, int rows, int cols, int i, int j)
    {
        if((i-1) >= 0 && grid[i-1][j] == 2)
        {
            return true;
        }
        
        if((i+1) < rows && grid[i+1][j] == 2)
        {
            return true;
        }
        
        if((j-1) >= 0 && grid[i][j-1] == 2)
        {
            return true;
        }
        
        if((j+1) < cols && grid[i][j+1] == 2)
        {
            return true;
        }
        
        return false;
    }
    
    void ConvertToRotten(vector<vector<int>>& grid, int rows, int cols)
    {
        for(int i = 0; i < rows; i++)
        {
            for(int j =0; j < cols; j++)
            {
                if(grid[i][j] == 3)
                {
                    grid[i][j] = 2;
                }
            }
        }
    }
};
