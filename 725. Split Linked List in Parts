//https://leetcode.com/problems/split-linked-list-in-parts/
class Solution {
public:
vector<ListNode*> splitListToParts(ListNode* h, int k) {
	vector<ListNode*> result(k, NULL);
	vector<int> s(k, 0);
	int len = 0;		

	for(ListNode* it = h; it; it = it->next, len++) {
        s[(len % k)]++;
    }

    ListNode* it = h;

    for(int i=0; i<k; i++) {
        if (s[i]) {
            result[i] = it;

            while(--s[i]) {
                it = it->next;
            }

            ListNode* tail = it;
            it = it->next;
            tail->next = NULL;
        }
        else {

            break;
        }
    }
    return result;
}
};
