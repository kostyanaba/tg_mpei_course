//https://leetcode.com/problems/binary-tree-right-side-view
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
private:
    void dfs(TreeNode* root, vector<int>& answer, int depth) {
        if (!root) return;
        if (answer.size() == depth) {
            answer.push_back(root->val);
        } else {
            answer[depth] = root->val;
        }
        dfs(root->left, answer, depth + 1);
        dfs(root->right, answer, depth + 1);
    }
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> answer;
        dfs(root, answer, 0);
        return answer;
    }
};
