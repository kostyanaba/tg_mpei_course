//https://leetcode.com/problems/binary-tree-maximum-path-sum/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int maxPathSum(TreeNode* root) {
        int res = INT_MIN;
        maxPathSum(root, res);
        return res;
    }
    
    int maxPathSum(TreeNode* root, int& res){
        if (root == NULL)
            return 0;
        
        int left = maxPathSum(root->left, res), right = maxPathSum(root->right, res);
        res = max({res, left + root->val, right + root->val, left + right + root->val, root->val});
        return max({left + root->val, right + root->val, root->val});
    }
};
