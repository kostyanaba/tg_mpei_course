//https://leetcode.com/problems/top-k-frequent-elements/
class Solution {
private:
    static bool comp(pair<int, int>& a, pair<int, int>& b) {
        return a.second > b.second;
    }
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> count;
        for (auto n : nums) count[n]++;
        vector<pair<int, int>> freqs;
        for (auto it : count) {
            freqs.push_back(make_pair(it.first, it.second));
        }
        sort(freqs.begin(), freqs.end(), comp);
        vector<int> ans;
        for (int i = 0; i < k; i++) {
            ans.push_back(freqs[i].first);
        }
        return ans;
    }
};
